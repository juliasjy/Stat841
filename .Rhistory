P_NicotinePatch <- getTargetFunction(Y = 5, exercise = 0, probability = 1, help = 0, d = 5)
P_Exercise <- getTargetFunction(Y = 6, exercise = 2, probability = 0, help = 1, d = 5)
P_Smoking <- getTargetFunction(Y = 5, exercise = 0, probability = 0, help = 1, d = 5)
plot(1:50, P_NicotinePatch, type='l', ylim=c(0,.0035), xlab="Laplace Smooth Tunning (L)", ylab="Posterior Probability for Each Classification", col="red")
lines(1:50, P_Exercise, type='o', col="green")
lines(1:50, P_Smoking, type='o', col="blue")
getTargetFunction <- function(Y, exercise, probability, help, d){
Ps <- Y/16*((exercise+1)/(Y+d))*((probability+1)/(Y+d))*((help+1)/(Y+d))
for(L in 2:50){
Ps <- c(Ps, Y/16*((exercise+L)/(Y+d*L))*((probability+L)/(Y+d*L))*((help+L)/(Y+d*L)))
}
return (Ps)
}
P_NicotinePatch <- getTargetFunction(Y = 5, exercise = 0, probability = 1, help = 0, d = 5)
P_Exercise <- getTargetFunction(Y = 6, exercise = 2, probability = 0, help = 1, d = 5)
P_Smoking <- getTargetFunction(Y = 5, exercise = 0, probability = 0, help = 1, d = 5)
plot(1:50, P_NicotinePatch, type='x', ylim=c(0,.0035), xlab="Laplace Smooth Tunning (L)", ylab="Posterior Probability for Each Classification", col="red")
getTargetFunction <- function(Y, exercise, probability, help, d){
Ps <- Y/16*((exercise+1)/(Y+d))*((probability+1)/(Y+d))*((help+1)/(Y+d))
for(L in 2:50){
Ps <- c(Ps, Y/16*((exercise+L)/(Y+d*L))*((probability+L)/(Y+d*L))*((help+L)/(Y+d*L)))
}
return (Ps)
}
P_NicotinePatch <- getTargetFunction(Y = 5, exercise = 0, probability = 1, help = 0, d = 5)
P_Exercise <- getTargetFunction(Y = 6, exercise = 2, probability = 0, help = 1, d = 5)
P_Smoking <- getTargetFunction(Y = 5, exercise = 0, probability = 0, help = 1, d = 5)
plot(1:50, P_NicotinePatch, type='b', ylim=c(0,.0035), xlab="Laplace Smooth Tunning (L)", ylab="Posterior Probability for Each Classification", col="red")
lines(1:50, P_Exercise, type='o', col="green")
lines(1:50, P_Smoking, type='o', col="blue")
getTargetFunction <- function(Y, exercise, probability, help, d){
Ps <- Y/16*((exercise+1)/(Y+d))*((probability+1)/(Y+d))*((help+1)/(Y+d))
for(L in 2:50){
Ps <- c(Ps, Y/16*((exercise+L)/(Y+d*L))*((probability+L)/(Y+d*L))*((help+L)/(Y+d*L)))
}
return (Ps)
}
P_NicotinePatch <- getTargetFunction(Y = 5, exercise = 0, probability = 1, help = 0, d = 5)
P_Exercise <- getTargetFunction(Y = 6, exercise = 2, probability = 0, help = 1, d = 5)
P_Smoking <- getTargetFunction(Y = 5, exercise = 0, probability = 0, help = 1, d = 5)
plot(1:50, P_NicotinePatch, type='l', ylim=c(0,.0035), xlab="Laplace Smooth Tunning (L)", ylab="Posterior Probability for Each Classification", col="red")
lines(1:50, P_Exercise, type='o', col="green")
lines(1:50, P_Smoking, type='p', col="blue")
getTargetFunction <- function(Y, exercise, probability, help, d){
Ps <- Y/16*((exercise+1)/(Y+d))*((probability+1)/(Y+d))*((help+1)/(Y+d))
for(L in 2:50){
Ps <- c(Ps, Y/16*((exercise+L)/(Y+d*L))*((probability+L)/(Y+d*L))*((help+L)/(Y+d*L)))
}
return (Ps)
}
P_NicotinePatch <- getTargetFunction(Y = 5, exercise = 0, probability = 1, help = 0, d = 5)
P_Exercise <- getTargetFunction(Y = 6, exercise = 2, probability = 0, help = 1, d = 5)
P_Smoking <- getTargetFunction(Y = 5, exercise = 0, probability = 0, help = 1, d = 5)
plot(1:50, P_NicotinePatch, type='l', ylim=c(0,.0035), xlab="Laplace Smooth Tunning (L)", ylab="Posterior Probability for Each Classification", col="red")
lines(1:50, P_Exercise, type='o', col="green")
lines(1:50, P_Smoking, type='c', col="blue")
getTargetFunction <- function(Y, exercise, probability, help, d){
Ps <- Y/16*((exercise+1)/(Y+d))*((probability+1)/(Y+d))*((help+1)/(Y+d))
for(L in 2:50){
Ps <- c(Ps, Y/16*((exercise+L)/(Y+d*L))*((probability+L)/(Y+d*L))*((help+L)/(Y+d*L)))
}
return (Ps)
}
P_NicotinePatch <- getTargetFunction(Y = 5, exercise = 0, probability = 1, help = 0, d = 5)
P_Exercise <- getTargetFunction(Y = 6, exercise = 2, probability = 0, help = 1, d = 5)
P_Smoking <- getTargetFunction(Y = 5, exercise = 0, probability = 0, help = 1, d = 5)
plot(1:50, P_NicotinePatch, type='l', ylim=c(0,.0035), xlab="Laplace Smooth Tunning (L)", ylab="Posterior Probability for Each Classification", col="red")
lines(1:50, P_Exercise, type='o', col="green")
lines(1:50, P_Smoking, type='b', col="blue")
getTargetFunction <- function(Y, exercise, probability, help, d){
Ps <- Y/16*((exercise+1)/(Y+d))*((probability+1)/(Y+d))*((help+1)/(Y+d))
for(L in 2:50){
Ps <- c(Ps, Y/16*((exercise+L)/(Y+d*L))*((probability+L)/(Y+d*L))*((help+L)/(Y+d*L)))
}
return (Ps)
}
P_NicotinePatch <- getTargetFunction(Y = 5, exercise = 0, probability = 1, help = 0, d = 5)
P_Exercise <- getTargetFunction(Y = 6, exercise = 2, probability = 0, help = 1, d = 5)
P_Smoking <- getTargetFunction(Y = 5, exercise = 0, probability = 0, help = 1, d = 5)
plot(1:50, P_NicotinePatch, type='o', ylim=c(0,.0035), xlab="Laplace Smooth Tunning (L)", ylab="Posterior Probability for Each Classification", col="red")
lines(1:50, P_Exercise, type='o', col="green")
lines(1:50, P_Smoking, type='b', col="blue")
getTargetFunction <- function(Y, exercise, probability, help, d){
Ps <- Y/16*((exercise+1)/(Y+d))*((probability+1)/(Y+d))*((help+1)/(Y+d))
for(L in 2:50){
Ps <- c(Ps, Y/16*((exercise+L)/(Y+d*L))*((probability+L)/(Y+d*L))*((help+L)/(Y+d*L)))
}
return (Ps)
}
P_NicotinePatch <- getTargetFunction(Y = 5, exercise = 0, probability = 1, help = 0, d = 5)
P_Exercise <- getTargetFunction(Y = 6, exercise = 2, probability = 0, help = 1, d = 5)
P_Smoking <- getTargetFunction(Y = 5, exercise = 0, probability = 0, help = 1, d = 5)
plot(1:50, P_NicotinePatch, type='o', ylim=c(0,.0035), xlab="Laplace Smooth Tunning (L)", ylab="Posterior Probability for Each Classification", col="red")
lines(1:50, P_Exercise, type='o', col="green")
lines(1:50, P_Smoking, type='b', col="blue")
legend("bottomright",
legend=c("Posterior Probability for Nicotine patch", "Posterior Probability for Exercise", "Posterior Probability for Still Smoking"),
col=c("red", "green", "blue"), lty=c(1, 1), cex=0.8)
getTargetFunction <- function(Y, exercise, probability, help, d){
Ps <- Y/16*((exercise+1)/(Y+d))*((probability+1)/(Y+d))*((help+1)/(Y+d))
for(L in 2:50){
Ps <- c(Ps, Y/16*((exercise+L)/(Y+d*L))*((probability+L)/(Y+d*L))*((help+L)/(Y+d*L)))
}
return (Ps)
}
P_NicotinePatch <- getTargetFunction(Y = 5, exercise = 0, probability = 1, help = 0, d = 5)
P_Exercise <- getTargetFunction(Y = 6, exercise = 2, probability = 0, help = 1, d = 5)
P_Smoking <- getTargetFunction(Y = 5, exercise = 0, probability = 0, help = 1, d = 5)
plot(1:50, P_NicotinePatch, type='o', ylim=c(0,.0035), xlab="Laplace Smooth Tunning (L)", ylab="Posterior Probability for Each Classification", col="red")
lines(1:50, P_Exercise, type='o', col="green")
lines(1:50, P_Smoking, type='b', col="blue")
legend("bottomright",
legend=c("Posterior Probability for Nicotine patch", "Posterior Probability for Exercise", "Posterior Probability for Still Smoking"),
col=c("red", "green", "blue"), lty=c(1, 1), cex=1)
getTargetFunction <- function(Y, exercise, probability, help, d){
Ps <- Y/16*((exercise+1)/(Y+d))*((probability+1)/(Y+d))*((help+1)/(Y+d))
for(L in 2:50){
Ps <- c(Ps, Y/16*((exercise+L)/(Y+d*L))*((probability+L)/(Y+d*L))*((help+L)/(Y+d*L)))
}
return (Ps)
}
P_NicotinePatch <- getTargetFunction(Y = 5, exercise = 0, probability = 1, help = 0, d = 5)
P_Exercise <- getTargetFunction(Y = 6, exercise = 2, probability = 0, help = 1, d = 5)
P_Smoking <- getTargetFunction(Y = 5, exercise = 0, probability = 0, help = 1, d = 5)
plot(1:50, P_NicotinePatch, type='o', ylim=c(0,.0035), xlab="Laplace Smooth Tunning (L)", ylab="Posterior Probability for Each Classification", col="red")
lines(1:50, P_Exercise, type='o', col="green")
lines(1:50, P_Smoking, type='b', col="blue")
legend("bottomright",
legend=c("Posterior Probability for Nicotine patch", "Posterior Probability for Exercise", "Posterior Probability for Still Smoking"),
col=c("red", "green", "blue"), lty=c(1, 1), cex=1)
P_NicotinePatch
getTargetFunction <- function(Y, patch, exercise, probability, help, quit, length, ds){
Ps <- Y/16*((patch+1)/(Y+ds[1]))*((exercise+1)/(Y+ds[2]))*((probability+1)/(Y+ds[3]))*((help+1)/(Y+ds[4]))((quit+1)/(Y+ds[5]))*((length+1)/(Y+ds[6]))
for(L in 2:50){
Ps <- c(Ps, Y/16*((exercise+L)/(Y+d*L))*((probability+L)/(Y+d*L))*((help+L)/(Y+d*L)))}
return (Ps)}
P_NicotinePatch <- getTargetFunction(Y = 5, patch = 5, exercise = 0, probability = 1, help = 0, quit = 0, length = 0, ds = c(2,2,2,2,2,3))
ds = c(2,2,2,2,2,3)
getTargetFunction <- function(Y, patch, exercise, probability, help, quit, length, ds){
Ps <- Y/16*((patch+1)/(Y+ds[1]))*((exercise+1)/(Y+ds[2]))*((probability+1)/(Y+ds[3]))*((help+1)/(Y+ds[4]))*((quit+1)/(Y+ds[5]))*((length+1)/(Y+ds[6]))
for(L in 2:50){
Ps <- c(Ps, Y/16*((exercise+L)/(Y+d*L))*((probability+L)/(Y+d*L))*((help+L)/(Y+d*L)))}
return (Ps)}
P_NicotinePatch <- getTargetFunction(Y = 5, patch = 5, exercise = 0, probability = 1, help = 0, quit = 0, length = 0, ds = c(2,2,2,2,2,3))
getTargetFunction <- function(Y, patch, exercise, probability, help, quit, length, ds){
Ps <- Y/16*((patch+1)/(Y+ds[1]))*((exercise+1)/(Y+ds[2]))*((probability+1)/(Y+ds[3]))*((help+1)/(Y+ds[4]))*((quit+1)/(Y+ds[5]))*((length+1)/(Y+ds[6]))
for(L in 2:50){
Ps <- c(Ps, Y/16*((patch+1)/(Y+L*ds[1]))*((exercise+1)/(Y+L*ds[2]))*((probability+1)/(Y+L*ds[3]))*((help+1)/(Y+L*ds[4]))*((quit+1)/(Y+L*ds[5]))*((length+1)/(Y+L*ds[6])))}
return (Ps)}
P_NicotinePatch <- getTargetFunction(Y = 5, patch = 5, exercise = 0, probability = 1, help = 0, quit = 0, length = 0, ds = c(2,2,2,2,2,3))
P_Exercise <- getTargetFunction(Y = 6, patch = 0, exercise = 2, probability = 0, help = 2, quit = 0, length = 0, ds = c(2,2,2,2,2,3))
P_Smoking <- getTargetFunction(Y = 5, patch = 0, exercise = 0, probability = 0, help = 1, quit = 0, length = 2, ds = c(2,2,2,2,2,3))
plot(1:50, P_NicotinePatch, type='o', ylim=c(0,.0035), xlab="Laplace Smooth Tunning (L)",
ylab="Posterior Probability for Each Classification", col="red")
lines(1:50, P_Exercise, type='o', col="green")
lines(1:50, P_Smoking, type='b', col="blue")
legend("bottomright",
legend=c("Posterior Probability for Nicotine patch", "Posterior Probability for Exercise",
"Posterior Probability for Still Smoking"),
col=c("red", "green", "blue"), lty=c(1, 1), cex=1)
getTargetFunction <- function(Y, patch, exercise, probability, help, quit, length, ds){
Ps <- Y/16*((patch+1)/(Y+ds[1]))*((exercise+1)/(Y+ds[2]))*((probability+1)/(Y+ds[3]))*((help+1)/(Y+ds[4]))*((quit+1)/(Y+ds[5]))*((length+1)/(Y+ds[6]))
for(L in 2:50){
Ps <- c(Ps, Y/16*((patch+1)/(Y+L*ds[1]))*((exercise+1)/(Y+L*ds[2]))*((probability+1)/(Y+L*ds[3]))*((help+1)/(Y+L*ds[4]))*((quit+1)/(Y+L*ds[5]))*((length+1)/(Y+L*ds[6])))}
return (Ps)}
P_NicotinePatch <- getTargetFunction(Y = 5, patch = 0, exercise = 0, probability = 1, help = 0, quit = 5, length = 0, ds = c(2,2,2,2,2,3))
P_Exercise <- getTargetFunction(Y = 6, patch = 0, exercise = 2, probability = 0, help = 2, quit = 0, length = 0, ds = c(2,2,2,2,2,3))
P_Smoking <- getTargetFunction(Y = 5, patch = 0, exercise = 0, probability = 0, help = 1, quit = 0, length = 2, ds = c(2,2,2,2,2,3))
plot(1:50, P_NicotinePatch, type='o', ylim=c(0,.0035), xlab="Laplace Smooth Tunning (L)",
ylab="Posterior Probability for Each Classification", col="red")
lines(1:50, P_Exercise, type='o', col="green")
lines(1:50, P_Smoking, type='b', col="blue")
legend("bottomright",
legend=c("Posterior Probability for Nicotine patch", "Posterior Probability for Exercise",
"Posterior Probability for Still Smoking"),
col=c("red", "green", "blue"), lty=c(1, 1), cex=1)
getTargetFunction <- function(Y, patch, exercise, probability, help, quit, length, ds){
Ps <- Y/16*((patch+1)/(Y+ds[1]))*((exercise+1)/(Y+ds[2]))*((probability+1)/(Y+ds[3]))*((help+1)/(Y+ds[4]))*((quit+1)/(Y+ds[5]))*((length+1)/(Y+ds[6]))
for(L in 2:50){
Ps <- c(Ps, Y/16*((patch+1)/(Y+L*ds[1]))*((exercise+1)/(Y+L*ds[2]))*((probability+1)/(Y+L*ds[3]))*((help+1)/(Y+L*ds[4]))*((quit+1)/(Y+L*ds[5]))*((length+1)/(Y+L*ds[6])))}
return (Ps)}
P_NicotinePatch <- getTargetFunction(Y = 5, patch = 0, exercise = 0, probability = 1, help = 0, quit = 5, length = 0, ds = c(2,2,2,2,2,3))
P_Exercise <- getTargetFunction(Y = 6, patch = 0, exercise = 2, probability = 0, help = 2, quit = 0, length = 0, ds = c(2,2,2,2,2,3))
P_Smoking <- getTargetFunction(Y = 5, patch = 0, exercise = 0, probability = 0, help = 1, quit = 0, length = 2, ds = c(2,2,2,2,2,3))
plot(1:50, P_NicotinePatch, type='o', ylim=c(0,.0035), xlab="Laplace Smooth Tunning (L)",
ylab="Posterior Probability for Each Classification", col="red")
lines(1:50, P_Exercise, type='o', col="green")
lines(1:50, P_Smoking, type='b', col="blue")
legend("bottomright",
legend=c("Posterior Probability for Nicotine patch", "Posterior Probability for Exercise",
"Posterior Probability for Still Smoking"),
col=c("red", "green", "blue"), lty=c(1, 1), cex=1)
getTargetFunction <- function(Y, patch, exercise, probability, help, quit, length, ds){
Ps <- Y/16*((patch+1)/(Y+ds[1]))*((exercise+1)/(Y+ds[2]))*((probability+1)/(Y+ds[3]))*((help+1)/(Y+ds[4]))*((quit+1)/(Y+ds[5]))*((length+1)/(Y+ds[6]))
for(L in 2:50){
Ps <- c(Ps, Y/16*((patch+1)/(Y+L*ds[1]))*((exercise+1)/(Y+L*ds[2]))*((probability+1)/(Y+L*ds[3]))*((help+1)/(Y+L*ds[4]))*((quit+1)/(Y+L*ds[5]))*((length+1)/(Y+L*ds[6])))}
return (Ps)}
P_NicotinePatch <- getTargetFunction(Y = 5, patch = 2, exercise = 0, probability = 1, help = 0, quit = 5, length = 0, ds = c(2,2,2,2,2,3))
P_Exercise <- getTargetFunction(Y = 6, patch = 0, exercise = 2, probability = 0, help = 2, quit = 0, length = 0, ds = c(2,2,2,2,2,3))
P_Smoking <- getTargetFunction(Y = 5, patch = 0, exercise = 0, probability = 0, help = 1, quit = 0, length = 2, ds = c(2,2,2,2,2,3))
plot(1:50, P_NicotinePatch, type='o', ylim=c(0,.0035), xlab="Laplace Smooth Tunning (L)",
ylab="Posterior Probability for Each Classification", col="red")
lines(1:50, P_Exercise, type='o', col="green")
lines(1:50, P_Smoking, type='b', col="blue")
legend("bottomright",
legend=c("Posterior Probability for Nicotine patch", "Posterior Probability for Exercise",
"Posterior Probability for Still Smoking"),
col=c("red", "green", "blue"), lty=c(1, 1), cex=1)
getTargetFunction <- function(Y, patch, exercise, probability, help, quit, length, ds){
Ps <- Y/16*((patch+1)/(Y+ds[1]))*((exercise+1)/(Y+ds[2]))*((probability+1)/(Y+ds[3]))*((help+1)/(Y+ds[4]))*((quit+1)/(Y+ds[5]))*((length+1)/(Y+ds[6]))
for(L in 2:50){
Ps <- c(Ps, Y/16*((patch+1)/(Y+L*ds[1]))*((exercise+1)/(Y+L*ds[2]))*((probability+1)/(Y+L*ds[3]))*((help+1)/(Y+L*ds[4]))*((quit+1)/(Y+L*ds[5]))*((length+1)/(Y+L*ds[6])))}
return (Ps)}
P_NicotinePatch <- getTargetFunction(Y = 5, patch = 0, exercise = 0, probability = 1, help = 0, quit = 5, length = 0, ds = c(2,2,2,2,2,3))
P_Exercise <- getTargetFunction(Y = 6, patch = 0, exercise = 2, probability = 0, help = 2, quit = 0, length = 0, ds = c(2,2,2,2,2,3))
P_Smoking <- getTargetFunction(Y = 5, patch = 0, exercise = 0, probability = 0, help = 1, quit = 0, length = 2, ds = c(2,2,2,2,2,3))
plot(1:50, P_NicotinePatch, type='o', ylim=c(0,.0035), xlab="Laplace Smooth Tunning (L)",
ylab="Posterior Probability for Each Classification", col="red")
lines(1:50, P_Exercise, type='o', col="green")
lines(1:50, P_Smoking, type='b', col="blue")
legend("bottomright",
legend=c("Posterior Probability for Nicotine patch", "Posterior Probability for Exercise",
"Posterior Probability for Still Smoking"),
col=c("red", "green", "blue"), lty=c(1, 1), cex=1)
getTargetFunction <- function(Y, patch, exercise, probability, help, quit, length, ds){
Ps <- Y/16*((patch+1)/(Y+ds[1]))*((exercise+1)/(Y+ds[2]))*((probability+1)/(Y+ds[3]))*((help+1)/(Y+ds[4]))*((quit+1)/(Y+ds[5]))*((length+1)/(Y+ds[6]))
for(L in 2:50){
Ps <- c(Ps, Y/16*((patch+1)/(Y+L*ds[1]))*((exercise+1)/(Y+L*ds[2]))*((probability+1)/(Y+L*ds[3]))*((help+1)/(Y+L*ds[4]))*((quit+1)/(Y+L*ds[5]))*((length+1)/(Y+L*ds[6])))}
return (Ps)}
P_NicotinePatch <- getTargetFunction(Y = 5, patch = 0, exercise = 0, probability = 1, help = 0, quit = 5, length = 0, ds = c(2,2,2,2,2,3))
P_Exercise <- getTargetFunction(Y = 6, patch = 0, exercise = 2, probability = 0, help = 2, quit = 5, length = 0, ds = c(2,2,2,2,2,3))
P_Smoking <- getTargetFunction(Y = 5, patch = 0, exercise = 0, probability = 0, help = 1, quit = 0, length = 2, ds = c(2,2,2,2,2,3))
plot(1:50, P_NicotinePatch, type='o', ylim=c(0,.0035), xlab="Laplace Smooth Tunning (L)",
ylab="Posterior Probability for Each Classification", col="red")
lines(1:50, P_Exercise, type='o', col="green")
lines(1:50, P_Smoking, type='b', col="blue")
legend("bottomright",
legend=c("Posterior Probability for Nicotine patch", "Posterior Probability for Exercise",
"Posterior Probability for Still Smoking"),
col=c("red", "green", "blue"), lty=c(1, 1), cex=1)
getTargetFunction <- function(Y, patch, exercise, probability, help, quit, length, ds){
Ps <- Y/16*((patch+1)/(Y+ds[1]))*((exercise+1)/(Y+ds[2]))*((probability+1)/(Y+ds[3]))*((help+1)/(Y+ds[4]))*((quit+1)/(Y+ds[5]))*((length+1)/(Y+ds[6]))
for(L in 2:50){
Ps <- c(Ps, Y/16*((patch+1)/(Y+L*ds[1]))*((exercise+1)/(Y+L*ds[2]))*((probability+1)/(Y+L*ds[3]))*((help+1)/(Y+L*ds[4]))*((quit+1)/(Y+L*ds[5]))*((length+1)/(Y+L*ds[6])))}
return (Ps)}
P_NicotinePatch <- getTargetFunction(Y = 5, patch = 0, exercise = 0, probability = 1, help = 0, quit = 5, length = 0, ds = c(2,2,2,2,2,3))
P_Exercise <- getTargetFunction(Y = 6, patch = 0, exercise = 2, probability = 0, help = 2, quit = 6, length = 0, ds = c(2,2,2,2,2,3))
P_Smoking <- getTargetFunction(Y = 5, patch = 0, exercise = 0, probability = 0, help = 1, quit = 0, length = 2, ds = c(2,2,2,2,2,3))
plot(1:50, P_NicotinePatch, type='o', ylim=c(0,.0035), xlab="Laplace Smooth Tunning (L)",
ylab="Posterior Probability for Each Classification", col="red")
lines(1:50, P_Exercise, type='o', col="green")
lines(1:50, P_Smoking, type='b', col="blue")
legend("bottomright",
legend=c("Posterior Probability for Nicotine patch", "Posterior Probability for Exercise",
"Posterior Probability for Still Smoking"),
col=c("red", "green", "blue"), lty=c(1, 1), cex=1)
getTargetFunction <- function(Y, patch, exercise, probability, help, quit, length, ds){
Ps <- Y/16*((patch+1)/(Y+ds[1]))*((exercise+1)/(Y+ds[2]))*((probability+1)/(Y+ds[3]))*((help+1)/(Y+ds[4]))*((quit+1)/(Y+ds[5]))*((length+1)/(Y+ds[6]))
for(L in 2:50){
Ps <- c(Ps, Y/16*((patch+1)/(Y+L*ds[1]))*((exercise+1)/(Y+L*ds[2]))*((probability+1)/(Y+L*ds[3]))*((help+1)/(Y+L*ds[4]))*((quit+1)/(Y+L*ds[5]))*((length+1)/(Y+L*ds[6])))}
return (Ps)}
P_NicotinePatch <- getTargetFunction(Y = 5, patch = 0, exercise = 0, probability = 1, help = 0, quit = 5, length = 0, ds = c(2,2,2,2,2,3))
P_Exercise <- getTargetFunction(Y = 6, patch = 0, exercise = 2, probability = 0, help = 1, quit = 6, length = 0, ds = c(2,2,2,2,2,3))
P_Smoking <- getTargetFunction(Y = 5, patch = 0, exercise = 0, probability = 0, help = 1, quit = 0, length = 2, ds = c(2,2,2,2,2,3))
plot(1:50, P_NicotinePatch, type='o', ylim=c(0,.0035), xlab="Laplace Smooth Tunning (L)",
ylab="Posterior Probability for Each Classification", col="red")
lines(1:50, P_Exercise, type='o', col="green")
lines(1:50, P_Smoking, type='b', col="blue")
legend("bottomright",
legend=c("Posterior Probability for Nicotine patch", "Posterior Probability for Exercise",
"Posterior Probability for Still Smoking"),
col=c("red", "green", "blue"), lty=c(1, 1), cex=1)
getTargetFunction <- function(Y, patch, exercise, probability, help, quit, length, ds){
Ps <- Y/16*((patch+1)/(Y+ds[1]))*((exercise+1)/(Y+ds[2]))*((probability+1)/(Y+ds[3]))*((help+1)/(Y+ds[4]))*((quit+1)/(Y+ds[5]))*((length+1)/(Y+ds[6]))
for(L in 2:50){
Ps <- c(Ps, Y/16*((patch+1)/(Y+L*ds[1]))*((exercise+1)/(Y+L*ds[2]))*((probability+1)/(Y+L*ds[3]))*((help+1)/(Y+L*ds[4]))*((quit+1)/(Y+L*ds[5]))*((length+1)/(Y+L*ds[6])))}
return (Ps)}
P_NicotinePatch <- getTargetFunction(Y = 5, patch = 0, exercise = 0, probability = 1, help = 0, quit = 5, length = 0, ds = c(2,2,2,2,2,3))
P_Exercise <- getTargetFunction(Y = 6, patch = 6, exercise = 2, probability = 0, help = 1, quit = 6, length = 0, ds = c(2,2,2,2,2,3))
P_Smoking <- getTargetFunction(Y = 5, patch = 0, exercise = 0, probability = 0, help = 1, quit = 0, length = 2, ds = c(2,2,2,2,2,3))
plot(1:50, P_NicotinePatch, type='o', ylim=c(0,.0035), xlab="Laplace Smooth Tunning (L)",
ylab="Posterior Probability for Each Classification", col="red")
lines(1:50, P_Exercise, type='o', col="green")
lines(1:50, P_Smoking, type='b', col="blue")
legend("bottomright",
legend=c("Posterior Probability for Nicotine patch", "Posterior Probability for Exercise",
"Posterior Probability for Still Smoking"),
col=c("red", "green", "blue"), lty=c(1, 1), cex=1)
getTargetFunction <- function(Y, patch, exercise, probability, help, quit, length, ds){
Ps <- Y/16*((patch+1)/(Y+ds[1]))*((exercise+1)/(Y+ds[2]))*((probability+1)/(Y+ds[3]))*((help+1)/(Y+ds[4]))*((quit+1)/(Y+ds[5]))*((length+1)/(Y+ds[6]))
for(L in 2:50){
Ps <- c(Ps, Y/16*((patch+1)/(Y+L*ds[1]))*((exercise+1)/(Y+L*ds[2]))*((probability+1)/(Y+L*ds[3]))*((help+1)/(Y+L*ds[4]))*((quit+1)/(Y+L*ds[5]))*((length+1)/(Y+L*ds[6])))}
return (Ps)}
P_NicotinePatch <- getTargetFunction(Y = 5, patch = 0, exercise = 0, probability = 1, help = 0, quit = 5, length = 0, ds = c(2,2,2,2,2,3))
P_Exercise <- getTargetFunction(Y = 6, patch = 6, exercise = 2, probability = 0, help = 1, quit = 6, length = 0, ds = c(2,2,2,2,2,3))
P_Smoking <- getTargetFunction(Y = 5, patch = 5, exercise = 0, probability = 0, help = 1, quit = 1, length = 2, ds = c(2,2,2,2,2,3))
plot(1:50, P_NicotinePatch, type='o', ylim=c(0,.0035), xlab="Laplace Smooth Tunning (L)",
ylab="Posterior Probability for Each Classification", col="red")
lines(1:50, P_Exercise, type='o', col="green")
lines(1:50, P_Smoking, type='b', col="blue")
legend("bottomright",
legend=c("Posterior Probability for Nicotine patch", "Posterior Probability for Exercise",
"Posterior Probability for Still Smoking"),
col=c("red", "green", "blue"), lty=c(1, 1), cex=1)
getTargetFunction <- function(Y, patch, exercise, probability, help, quit, length, ds){
Ps <- Y/16*((patch+1)/(Y+ds[1]))*((exercise+1)/(Y+ds[2]))*((probability+1)/(Y+ds[3]))*((help+1)/(Y+ds[4]))*((quit+1)/(Y+ds[5]))*((length+1)/(Y+ds[6]))
for(L in 2:50){
Ps <- c(Ps, Y/16*((patch+1)/(Y+L*ds[1]))*((exercise+1)/(Y+L*ds[2]))*((probability+1)/(Y+L*ds[3]))*((help+1)/(Y+L*ds[4]))*((quit+1)/(Y+L*ds[5]))*((length+1)/(Y+L*ds[6])))}
return (Ps)}
P_NicotinePatch <- getTargetFunction(Y = 5, patch = 0, exercise = 0, probability = 1, help = 0, quit = 5, length = 0, ds = c(2,2,2,2,2,3))
P_Exercise <- getTargetFunction(Y = 6, patch = 6, exercise = 2, probability = 0, help = 1, quit = 6, length = 0, ds = c(2,2,2,2,2,3))
P_Smoking <- getTargetFunction(Y = 5, patch = 5, exercise = 0, probability = 0, help = 1, quit = 1, length = 2, ds = c(2,2,2,2,2,3))
plot(1:50, P_NicotinePatch, type='o', ylim=c(0,.0001), xlab="Laplace Smooth Tunning (L)",
ylab="Posterior Probability for Each Classification", col="red")
lines(1:50, P_Exercise, type='o', col="green")
lines(1:50, P_Smoking, type='b', col="blue")
legend("bottomright",
legend=c("Posterior Probability for Nicotine patch", "Posterior Probability for Exercise",
"Posterior Probability for Still Smoking"),
col=c("red", "green", "blue"), lty=c(1, 1), cex=1)
getTargetFunction <- function(Y, patch, exercise, probability, help, quit, length, ds){
Ps <- Y/16*((patch+1)/(Y+ds[1]))*((exercise+1)/(Y+ds[2]))*((probability+1)/(Y+ds[3]))*((help+1)/(Y+ds[4]))*((quit+1)/(Y+ds[5]))*((length+1)/(Y+ds[6]))
for(L in 2:50){
Ps <- c(Ps, Y/16*((patch+L)/(Y+L*ds[1]))*((exercise+L)/(Y+L*ds[2]))*((probability+L)/(Y+L*ds[3]))*((help+L)/(Y+L*ds[4]))*((quit+L)/(Y+L*ds[5]))*((length+L)/(Y+L*ds[6])))}
return (Ps)}
P_NicotinePatch <- getTargetFunction(Y = 5, patch = 0, exercise = 0, probability = 1, help = 0, quit = 5, length = 0, ds = c(2,2,2,2,2,3))
P_Exercise <- getTargetFunction(Y = 6, patch = 6, exercise = 2, probability = 0, help = 1, quit = 6, length = 0, ds = c(2,2,2,2,2,3))
P_Smoking <- getTargetFunction(Y = 5, patch = 5, exercise = 0, probability = 0, help = 1, quit = 1, length = 2, ds = c(2,2,2,2,2,3))
plot(1:50, P_NicotinePatch, type='o', ylim=c(0,.0001), xlab="Laplace Smooth Tunning (L)",
ylab="Posterior Probability for Each Classification", col="red")
lines(1:50, P_Exercise, type='o', col="green")
lines(1:50, P_Smoking, type='b', col="blue")
legend("bottomright",
legend=c("Posterior Probability for Nicotine patch", "Posterior Probability for Exercise",
"Posterior Probability for Still Smoking"),
col=c("red", "green", "blue"), lty=c(1, 1), cex=1)
plot(1:50, P_NicotinePatch, type='o', ylim=c(0,.0005), xlab="Laplace Smooth Tunning (L)",
ylab="Posterior Probability for Each Classification", col="red")
getTargetFunction <- function(Y, patch, exercise, probability, help, quit, length, ds){
Ps <- Y/16*((patch+1)/(Y+ds[1]))*((exercise+1)/(Y+ds[2]))*((probability+1)/(Y+ds[3]))*((help+1)/(Y+ds[4]))*((quit+1)/(Y+ds[5]))*((length+1)/(Y+ds[6]))
for(L in 2:50){
Ps <- c(Ps, Y/16*((patch+L)/(Y+L*ds[1]))*((exercise+L)/(Y+L*ds[2]))*((probability+L)/(Y+L*ds[3]))*((help+L)/(Y+L*ds[4]))*((quit+L)/(Y+L*ds[5]))*((length+L)/(Y+L*ds[6])))}
return (Ps)}
P_NicotinePatch <- getTargetFunction(Y = 5, patch = 0, exercise = 0, probability = 1, help = 0, quit = 5, length = 0, ds = c(2,2,2,2,2,3))
P_Exercise <- getTargetFunction(Y = 6, patch = 6, exercise = 2, probability = 0, help = 1, quit = 6, length = 0, ds = c(2,2,2,2,2,3))
P_Smoking <- getTargetFunction(Y = 5, patch = 5, exercise = 0, probability = 0, help = 1, quit = 1, length = 2, ds = c(2,2,2,2,2,3))
plot(1:50, P_NicotinePatch, type='o', ylim=c(0,.0005), xlab="Laplace Smooth Tunning (L)",
ylab="Posterior Probability for Each Classification", col="red")
lines(1:50, P_Exercise, type='o', col="green")
lines(1:50, P_Smoking, type='b', col="blue")
legend("bottomright",
legend=c("Posterior Probability for Nicotine patch", "Posterior Probability for Exercise",
"Posterior Probability for Still Smoking"),
col=c("red", "green", "blue"), lty=c(1, 1), cex=1)
getTargetFunction <- function(Y, patch, exercise, probability, help, quit, length, ds){
Ps <- Y/16*((patch+1)/(Y+ds[1]))*((exercise+1)/(Y+ds[2]))*((probability+1)/(Y+ds[3]))*((help+1)/(Y+ds[4]))*((quit+1)/(Y+ds[5]))*((length+1)/(Y+ds[6]))
for(L in 2:50){
Ps <- c(Ps, Y/16*((patch+L)/(Y+L*ds[1]))*((exercise+L)/(Y+L*ds[2]))*((probability+L)/(Y+L*ds[3]))*((help+L)/(Y+L*ds[4]))*((quit+L)/(Y+L*ds[5]))*((length+L)/(Y+L*ds[6])))}
return (Ps)}
P_NicotinePatch <- getTargetFunction(Y = 5, patch = 0, exercise = 0, probability = 1, help = 0, quit = 5, length = 0, ds = c(2,2,2,2,2,3))
P_Exercise <- getTargetFunction(Y = 6, patch = 6, exercise = 2, probability = 0, help = 1, quit = 6, length = 0, ds = c(2,2,2,2,2,3))
P_Smoking <- getTargetFunction(Y = 5, patch = 5, exercise = 0, probability = 0, help = 1, quit = 1, length = 2, ds = c(2,2,2,2,2,3))
plot(1:50, P_NicotinePatch, type='o', ylim=c(0,.001), xlab="Laplace Smooth Tunning (L)",
ylab="Posterior Probability for Each Classification", col="red")
lines(1:50, P_Exercise, type='o', col="green")
lines(1:50, P_Smoking, type='b', col="blue")
legend("bottomright",
legend=c("Posterior Probability for Nicotine patch", "Posterior Probability for Exercise",
"Posterior Probability for Still Smoking"),
col=c("red", "green", "blue"), lty=c(1, 1), cex=1)
getTargetFunction <- function(Y, patch, exercise, probability, help, quit, length, ds){
Ps <- Y/16*((patch+1)/(Y+ds[1]))*((exercise+1)/(Y+ds[2]))*((probability+1)/(Y+ds[3]))*((help+1)/(Y+ds[4]))*((quit+1)/(Y+ds[5]))*((length+1)/(Y+ds[6]))
for(L in 2:50){
Ps <- c(Ps, Y/16*((patch+L)/(Y+L*ds[1]))*((exercise+L)/(Y+L*ds[2]))*((probability+L)/(Y+L*ds[3]))*((help+L)/(Y+L*ds[4]))*((quit+L)/(Y+L*ds[5]))*((length+L)/(Y+L*ds[6])))}
return (Ps)}
P_NicotinePatch <- getTargetFunction(Y = 5, patch = 0, exercise = 0, probability = 1, help = 0, quit = 5, length = 0, ds = c(2,2,2,2,2,3))
P_Exercise <- getTargetFunction(Y = 6, patch = 6, exercise = 2, probability = 0, help = 1, quit = 6, length = 0, ds = c(2,2,2,2,2,3))
P_Smoking <- getTargetFunction(Y = 5, patch = 5, exercise = 0, probability = 0, help = 1, quit = 1, length = 2, ds = c(2,2,2,2,2,3))
plot(1:50, P_NicotinePatch, type='o', ylim=c(0,.005), xlab="Laplace Smooth Tunning (L)",
ylab="Posterior Probability for Each Classification", col="red")
lines(1:50, P_Exercise, type='o', col="green")
lines(1:50, P_Smoking, type='b', col="blue")
legend("bottomright",
legend=c("Posterior Probability for Nicotine patch", "Posterior Probability for Exercise",
"Posterior Probability for Still Smoking"),
col=c("red", "green", "blue"), lty=c(1, 1), cex=1)
getTargetFunction <- function(Y, patch, exercise, probability, help, quit, length, ds){
Ps <- Y/16*((patch+1)/(Y+ds[1]))*((exercise+1)/(Y+ds[2]))*((probability+1)/(Y+ds[3]))*((help+1)/(Y+ds[4]))*((quit+1)/(Y+ds[5]))*((length+1)/(Y+ds[6]))
for(L in 2:10){
Ps <- c(Ps, Y/16*((patch+L)/(Y+L*ds[1]))*((exercise+L)/(Y+L*ds[2]))*((probability+L)/(Y+L*ds[3]))*((help+L)/(Y+L*ds[4]))*((quit+L)/(Y+L*ds[5]))*((length+L)/(Y+L*ds[6])))}
return (Ps)}
P_NicotinePatch <- getTargetFunction(Y = 5, patch = 0, exercise = 0, probability = 1, help = 0, quit = 5, length = 0, ds = c(2,2,2,2,2,3))
P_Exercise <- getTargetFunction(Y = 6, patch = 6, exercise = 2, probability = 0, help = 1, quit = 6, length = 0, ds = c(2,2,2,2,2,3))
P_Smoking <- getTargetFunction(Y = 5, patch = 5, exercise = 0, probability = 0, help = 1, quit = 1, length = 2, ds = c(2,2,2,2,2,3))
plot(1:10, P_NicotinePatch, type='o', ylim=c(0,.005), xlab="Laplace Smooth Tunning (L)",
ylab="Posterior Probability for Each Classification", col="red")
lines(1:10, P_Exercise, type='o', col="green")
lines(1:10, P_Smoking, type='b', col="blue")
legend("bottomright",
legend=c("Posterior Probability for Nicotine patch", "Posterior Probability for Exercise",
"Posterior Probability for Still Smoking"),
col=c("red", "green", "blue"), lty=c(1, 1), cex=1)
getTargetFunction <- function(Y, patch, exercise, probability, help, quit, length, ds){
Ps <- 0
for(L in 1:10){
Ps <- c(Ps, Y/16*((patch+L)/(Y+L*ds[1]))*((exercise+L)/(Y+L*ds[2]))*((probability+L)/(Y+L*ds[3]))*((help+L)/(Y+L*ds[4]))*((quit+L)/(Y+L*ds[5]))*((length+L)/(Y+L*ds[6])))}
return (Ps)}
P_NicotinePatch <- getTargetFunction(Y = 5, patch = 0, exercise = 0, probability = 1, help = 0, quit = 5, length = 0, ds = c(2,2,2,2,2,3))
P_Exercise <- getTargetFunction(Y = 6, patch = 6, exercise = 2, probability = 0, help = 1, quit = 6, length = 0, ds = c(2,2,2,2,2,3))
P_Smoking <- getTargetFunction(Y = 5, patch = 5, exercise = 0, probability = 0, help = 1, quit = 1, length = 2, ds = c(2,2,2,2,2,3))
plot(1:10, P_NicotinePatch, type='o', ylim=c(0,.005), xlab="Laplace Smooth Tunning (L)",
ylab="Posterior Probability for Each Classification", col="red")
getTargetFunction <- function(Y, patch, exercise, probability, help, quit, length, ds){
Ps <- 0
for(L in 1:10){
Ps <- c(Ps, Y/16*((patch+L)/(Y+L*ds[1]))*((exercise+L)/(Y+L*ds[2]))*((probability+L)/(Y+L*ds[3]))*((help+L)/(Y+L*ds[4]))*((quit+L)/(Y+L*ds[5]))*((length+L)/(Y+L*ds[6])))}
return (Ps)}
P_NicotinePatch <- getTargetFunction(Y = 5, patch = 0, exercise = 0, probability = 1, help = 0, quit = 5, length = 0, ds = c(2,2,2,2,2,3))
P_Exercise <- getTargetFunction(Y = 6, patch = 6, exercise = 2, probability = 0, help = 1, quit = 6, length = 0, ds = c(2,2,2,2,2,3))
P_Smoking <- getTargetFunction(Y = 5, patch = 5, exercise = 0, probability = 0, help = 1, quit = 1, length = 2, ds = c(2,2,2,2,2,3))
plot(0:10, P_NicotinePatch, type='o', ylim=c(0,.005), xlab="Laplace Smooth Tunning (L)",
ylab="Posterior Probability for Each Classification", col="red")
lines(0:10, P_Exercise, type='o', col="green")
lines(0:10, P_Smoking, type='b', col="blue")
legend("bottomright",
legend=c("Posterior Probability for Nicotine patch", "Posterior Probability for Exercise",
"Posterior Probability for Still Smoking"),
col=c("red", "green", "blue"), lty=c(1, 1), cex=1)
getTargetFunction <- function(Y, patch, exercise, probability, help, quit, length, ds){
Ps <- 0
for(L in 1:10){
Ps <- c(Ps, Y/16*((patch+L)/(Y+L*ds[1]))*((exercise+L)/(Y+L*ds[2]))*((probability+L)/(Y+L*ds[3]))*((help+L)/(Y+L*ds[4]))*((quit+L)/(Y+L*ds[5]))*((length+L)/(Y+L*ds[6])))}
return (Ps)}
P_NicotinePatch <- getTargetFunction(Y = 5, patch = 0, exercise = 0, probability = 1, help = 0, quit = 5, length = 0, ds = c(2,2,2,2,2,3))
P_Exercise <- getTargetFunction(Y = 6, patch = 6, exercise = 2, probability = 0, help = 1, quit = 6, length = 0, ds = c(2,2,2,2,2,3))
P_Smoking <- getTargetFunction(Y = 5, patch = 5, exercise = 0, probability = 0, help = 1, quit = 1, length = 2, ds = c(2,2,2,2,2,3))
plot(0:10, P_NicotinePatch, type='o', ylim=c(0,.003), xlab="Laplace Smooth Tunning (L)",
ylab="Posterior Probability for Each Classification", col="red")
lines(0:10, P_Exercise, type='o', col="green")
lines(0:10, P_Smoking, type='b', col="blue")
legend("bottomright",
legend=c("Posterior Probability for Nicotine patch", "Posterior Probability for Exercise",
"Posterior Probability for Still Smoking"),
col=c("red", "green", "blue"), lty=c(1, 1), cex=1)
getTargetFunction <- function(Y, patch, exercise, probability, help, quit, length, ds){
Ps <- 0
for(L in 1:10){
Ps <- c(Ps, Y/16*((patch+L)/(Y+L*ds[1]))*((exercise+L)/(Y+L*ds[2]))*((probability+L)/(Y+L*ds[3]))*((help+L)/(Y+L*ds[4]))*((quit+L)/(Y+L*ds[5]))*((length+L)/(Y+L*ds[6])))}
return (Ps)}
P_NicotinePatch <- getTargetFunction(Y = 5, patch = 0, exercise = 0, probability = 1, help = 0, quit = 5, length = 0, ds = c(2,2,2,2,2,3))
P_Exercise <- getTargetFunction(Y = 6, patch = 6, exercise = 2, probability = 0, help = 1, quit = 6, length = 0, ds = c(2,2,2,2,2,3))
P_Smoking <- getTargetFunction(Y = 5, patch = 5, exercise = 0, probability = 0, help = 1, quit = 1, length = 2, ds = c(2,2,2,2,2,3))
plot(0:10, P_NicotinePatch, type='l', ylim=c(0,.003), xlab="Laplace Smooth Tunning (L)",
ylab="Posterior Probability for Each Classification", col="red")
lines(0:10, P_Exercise, type='l', col="green")
lines(0:10, P_Smoking, type='l', col="blue")
legend("bottomright",
legend=c("Posterior Probability for Nicotine patch", "Posterior Probability for Exercise",
"Posterior Probability for Still Smoking"),
col=c("red", "green", "blue"), lty=c(1, 1), cex=1)
getTargetFunction <- function(Y, patch, exercise, probability, help, quit, length, ds){
Ps <- 0
for(L in 1:10){
Ps <- c(Ps, Y/16*((patch+L)/(Y+L*ds[1]))*((exercise+L)/(Y+L*ds[2]))*((probability+L)/(Y+L*ds[3]))*((help+L)/(Y+L*ds[4]))*((quit+L)/(Y+L*ds[5]))*((length+L)/(Y+L*ds[6])))}
return (Ps)}
P_NicotinePatch <- getTargetFunction(Y = 5, patch = 0, exercise = 0, probability = 1, help = 0, quit = 5, length = 0, ds = c(2,2,2,2,2,3))
P_Exercise <- getTargetFunction(Y = 6, patch = 6, exercise = 2, probability = 0, help = 1, quit = 6, length = 0, ds = c(2,2,2,2,2,3))
P_Smoking <- getTargetFunction(Y = 5, patch = 5, exercise = 0, probability = 0, help = 1, quit = 1, length = 2, ds = c(2,2,2,2,2,3))
plot(0:10, P_NicotinePatch, type='l', ylim=c(0,.003), xlab="Laplace Smooth Tunning (L)",
ylab="Posterior Probability for Each Classification", col="red")
lines(0:10, P_Exercise, type='l', col="green")
lines(0:10, P_Smoking, type='l', col="blue")
legend("bottomright",
legend=c("Posterior Probability for Nicotine patch", "Posterior Probability for Exercise",
"Posterior Probability for Still Smoking"),
col=c("red", "green", "blue"), lty=c(1, 1), cex=0.8)
source("./getData.R")
source("./fillMissingDataByMean.R")
library(beepr)
train_data <- getData("train.csv")
train_data <- fillMissingDataByMean(train_data)
test_data <- fillMissingDataByMean(getData("test.csv"))
setwd("~/Documents/waterloo/2020winter/Stat841/Stat841")
source("./getData.R")
source("./fillMissingDataByMean.R")
library(beepr)
train_data <- getData("train.csv")
train_data <- fillMissingDataByMean(train_data)
test_data <- fillMissingDataByMean(getData("test.csv"))
View(train_data)
train.x = train_data[, -c(1,ncol(train_data))]
View(train.x)
train_data["273"]
train_data[273]
train.y = train_data[,"satisfied"]
train_data[273]
test.x <- test_data[,-1]
View(test.x)
library(randomForest)
rf <- randomForest(x = train.x, y = train.y, xtest = test.x, ntree = 250)
testpredicted <- rf$test$predicted
testpredicted
round(rf$predicted)
sum(round(rf$predicted) == train.y)
24335/30080
write.csv(testpredicted, "./result.csv")
unlist(testpredicted)
write.csv(unlist(round(testpredicted)),"./result.csv")
rf2 <- randomForest(x = train.x, y = train.y, xtest = test.x, ntree = 500)
beep()
sum(round(rf2$predicted) == train.y)
sum(round(rf$predicted) == train.y)
